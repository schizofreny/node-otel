name: ci
on:
  push:
    branches:
      # Matches all branch and tag names that don't contain a slash (/).
      - "*"
    tags:
      # Matches all semantic versioning tags
      - v[0-9]+.[0-9]+.[0-9]+
jobs:
  build:
    strategy:
      matrix:
        node-version: ["16.17.0", "18.9.0"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Resolve release name
        id: release
        run: |
          RELEASE_NAME=
          GITHUB_REF_STRIPPED=${GITHUB_REF#refs/}
          REF_NAME=${GITHUB_REF_STRIPPED##*/}
          REF_TYPE=${GITHUB_REF_STRIPPED%/*}

          if [[ "$REF_TYPE" == "heads" ]]; then
            if [[ "$REF_NAME" == "master" ]]; then
              RELEASE_NAME="${GITHUB_SHA}"
            else
              RELEASE_NAME="$REF_NAME"
            fi
          elif [[ "$REF_TYPE" == "tags" ]]; then
            RELEASE_NAME="${REF_NAME##v}"
          fi

          echo "Using $RELEASE_NAME as release name."
          echo "::set-output name=name::$RELEASE_NAME"
      # setup docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # setup node
      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      # setup pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      # build app
      - name: Install dependencies
        run: pnpm i
      - name: Build app
        run: pnpm build
      # build docker image
      - name: Build and push docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: NODE_VERSION=${{ matrix.node-version }}
          tags: |
            ghcr.io/schizofreny/node-otel:${{ matrix.node-version }}-${{ steps.release.outputs.name }}
